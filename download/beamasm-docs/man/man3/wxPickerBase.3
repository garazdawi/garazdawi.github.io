.TH wxPickerBase 3 "wx 1.9.1" "" "Erlang Module Definition"
.SH NAME
wxPickerBase \- See external documentation: wxPickerBase.
.SH DESCRIPTION
.LP
See external documentation: wxPickerBase\&.
.LP
This class is derived (and can use functions) from: 
.br
wxControl 
.br
wxWindow 
.br
wxEvtHandler 
.SH "DATA TYPES"

.RS 2
.TP 2
.B
wxPickerBase():

.RS 2
.LP
An object reference, The representation is internal and can be changed without notice\&. It can\&'t be used for comparsion stored on disc or distributed for use on other nodes\&.
.RE
.RE
.SH EXPORTS
.LP
.B
setInternalMargin(This, Newmargin) -> ok
.br
.RS
.LP
Types:

.RS 3
This = wxPickerBase()
.br
Newmargin = integer()
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
getInternalMargin(This) -> integer()
.br
.RS
.LP
Types:

.RS 3
This = wxPickerBase()
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
setTextCtrlProportion(This, Prop) -> ok
.br
.RS
.LP
Types:

.RS 3
This = wxPickerBase()
.br
Prop = integer()
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
setPickerCtrlProportion(This, Prop) -> ok
.br
.RS
.LP
Types:

.RS 3
This = wxPickerBase()
.br
Prop = integer()
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
getTextCtrlProportion(This) -> integer()
.br
.RS
.LP
Types:

.RS 3
This = wxPickerBase()
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
getPickerCtrlProportion(This) -> integer()
.br
.RS
.LP
Types:

.RS 3
This = wxPickerBase()
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
hasTextCtrl(This) -> boolean()
.br
.RS
.LP
Types:

.RS 3
This = wxPickerBase()
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
getTextCtrl(This) -> wxTextCtrl:wxTextCtrl()
.br
.RS
.LP
Types:

.RS 3
This = wxPickerBase()
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
isTextCtrlGrowable(This) -> boolean()
.br
.RS
.LP
Types:

.RS 3
This = wxPickerBase()
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
setPickerCtrlGrowable(This) -> ok
.br
.RS
.LP
Types:

.RS 3
This = wxPickerBase()
.br
.RE
.RE
.RS
.LP
Equivalent to setPickerCtrlGrowable(This, [])\&.
.RE
.LP
.B
setPickerCtrlGrowable(This, Options::[Option]) -> ok
.br
.RS
.LP
Types:

.RS 3
This = wxPickerBase()
.br
Option = {grow, boolean()}
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
setTextCtrlGrowable(This) -> ok
.br
.RS
.LP
Types:

.RS 3
This = wxPickerBase()
.br
.RE
.RE
.RS
.LP
Equivalent to setTextCtrlGrowable(This, [])\&.
.RE
.LP
.B
setTextCtrlGrowable(This, Options::[Option]) -> ok
.br
.RS
.LP
Types:

.RS 3
This = wxPickerBase()
.br
Option = {grow, boolean()}
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
isPickerCtrlGrowable(This) -> boolean()
.br
.RS
.LP
Types:

.RS 3
This = wxPickerBase()
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.SH AUTHORS
.LP

.I
<>