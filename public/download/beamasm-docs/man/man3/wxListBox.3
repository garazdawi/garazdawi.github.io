.TH wxListBox 3 "wx 1.9.1" "" "Erlang Module Definition"
.SH NAME
wxListBox \- See external documentation: wxListBox.
.SH DESCRIPTION
.LP
See external documentation: wxListBox\&.
.LP
This class is derived (and can use functions) from: 
.br
wxControlWithItems 
.br
wxControl 
.br
wxWindow 
.br
wxEvtHandler 
.SH "DATA TYPES"

.RS 2
.TP 2
.B
wxListBox():

.RS 2
.LP
An object reference, The representation is internal and can be changed without notice\&. It can\&'t be used for comparsion stored on disc or distributed for use on other nodes\&.
.RE
.RE
.SH EXPORTS
.LP
.B
new() -> wxListBox()
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
new(Parent, Id) -> wxListBox()
.br
.RS
.LP
Types:

.RS 3
Parent = wxWindow:wxWindow()
.br
Id = integer()
.br
.RE
.RE
.RS
.LP
Equivalent to new(Parent, Id, [])\&.
.RE
.LP
.B
new(Parent, Id, Options::[Option]) -> wxListBox()
.br
.RS
.LP
Types:

.RS 3
Parent = wxWindow:wxWindow()
.br
Id = integer()
.br
Option = {pos, {X::integer(), Y::integer()}} | {size, {W::integer(), H::integer()}} | {choices, [unicode:chardata()]} | {style, integer()} | {validator, wx:wx_object()}
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
create(This, Parent, Id, Pos, Size, Choices) -> boolean()
.br
.RS
.LP
Types:

.RS 3
This = wxListBox()
.br
Parent = wxWindow:wxWindow()
.br
Id = integer()
.br
Pos = {X::integer(), Y::integer()}
.br
Size = {W::integer(), H::integer()}
.br
Choices = [unicode:chardata()]
.br
.RE
.RE
.RS
.LP
Equivalent to create(This, Parent, Id, Pos, Size, Choices, [])\&.
.RE
.LP
.B
create(This, Parent, Id, Pos, Size, Choices, Options::[Option]) -> boolean()
.br
.RS
.LP
Types:

.RS 3
This = wxListBox()
.br
Parent = wxWindow:wxWindow()
.br
Id = integer()
.br
Pos = {X::integer(), Y::integer()}
.br
Size = {W::integer(), H::integer()}
.br
Choices = [unicode:chardata()]
.br
Option = {style, integer()} | {validator, wx:wx_object()}
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
deselect(This, N) -> ok
.br
.RS
.LP
Types:

.RS 3
This = wxListBox()
.br
N = integer()
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
getSelections(This) -> Result
.br
.RS
.LP
Types:

.RS 3
Result = {Res::integer(), ASelections::[integer()]}
.br
This = wxListBox()
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
insertItems(This, Items, Pos) -> ok
.br
.RS
.LP
Types:

.RS 3
This = wxListBox()
.br
Items = [unicode:chardata()]
.br
Pos = integer()
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
isSelected(This, N) -> boolean()
.br
.RS
.LP
Types:

.RS 3
This = wxListBox()
.br
N = integer()
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
set(This, Items) -> ok
.br
.RS
.LP
Types:

.RS 3
This = wxListBox()
.br
Items = [unicode:chardata()]
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
hitTest(This, Point) -> integer()
.br
.RS
.LP
Types:

.RS 3
This = wxListBox()
.br
Point = {X::integer(), Y::integer()}
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
setFirstItem(This, N) -> ok
.br
.B
setFirstItem(This, S) -> ok
.br
.RS
.LP
Types:

.RS 3
This = wxListBox()
.br
N = integer()
.br
This = wxListBox()
.br
S = unicode:chardata()
.br
.RE
.RE
.RS
.LP
See external documentation\&. 
.br
Also:
.br
setFirstItem(This, S) -> \&'ok\&' when
.br
This::wxListBox(), S::unicode:chardata()\&.
.br

.RE
.LP
.B
destroy(This::wxListBox()) -> ok
.br
.RS
.LP
Destroys this object, do not use object again
.RE
.SH AUTHORS
.LP

.I
<>