.TH wxHtmlEasyPrinting 3 "wx 1.9.1" "" "Erlang Module Definition"
.SH NAME
wxHtmlEasyPrinting \- See external documentation: wxHtmlEasyPrinting.
.SH DESCRIPTION
.LP
See external documentation: wxHtmlEasyPrinting\&.
.SH "DATA TYPES"

.RS 2
.TP 2
.B
wxHtmlEasyPrinting():

.RS 2
.LP
An object reference, The representation is internal and can be changed without notice\&. It can\&'t be used for comparsion stored on disc or distributed for use on other nodes\&.
.RE
.RE
.SH EXPORTS
.LP
.B
new() -> wxHtmlEasyPrinting()
.br
.RS
.LP
Equivalent to new([])\&.
.RE
.LP
.B
new(Options::[Option]) -> wxHtmlEasyPrinting()
.br
.RS
.LP
Types:

.RS 3
Option = {name, unicode:chardata()} | {parentWindow, wxWindow:wxWindow()}
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
getPrintData(This) -> wxPrintData:wxPrintData()
.br
.RS
.LP
Types:

.RS 3
This = wxHtmlEasyPrinting()
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
getPageSetupData(This) -> wxPageSetupDialogData:wxPageSetupDialogData()
.br
.RS
.LP
Types:

.RS 3
This = wxHtmlEasyPrinting()
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
previewFile(This, Htmlfile) -> boolean()
.br
.RS
.LP
Types:

.RS 3
This = wxHtmlEasyPrinting()
.br
Htmlfile = unicode:chardata()
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
previewText(This, Htmltext) -> boolean()
.br
.RS
.LP
Types:

.RS 3
This = wxHtmlEasyPrinting()
.br
Htmltext = unicode:chardata()
.br
.RE
.RE
.RS
.LP
Equivalent to previewText(This, Htmltext, [])\&.
.RE
.LP
.B
previewText(This, Htmltext, Options::[Option]) -> boolean()
.br
.RS
.LP
Types:

.RS 3
This = wxHtmlEasyPrinting()
.br
Htmltext = unicode:chardata()
.br
Option = {basepath, unicode:chardata()}
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
printFile(This, Htmlfile) -> boolean()
.br
.RS
.LP
Types:

.RS 3
This = wxHtmlEasyPrinting()
.br
Htmlfile = unicode:chardata()
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
printText(This, Htmltext) -> boolean()
.br
.RS
.LP
Types:

.RS 3
This = wxHtmlEasyPrinting()
.br
Htmltext = unicode:chardata()
.br
.RE
.RE
.RS
.LP
Equivalent to printText(This, Htmltext, [])\&.
.RE
.LP
.B
printText(This, Htmltext, Options::[Option]) -> boolean()
.br
.RS
.LP
Types:

.RS 3
This = wxHtmlEasyPrinting()
.br
Htmltext = unicode:chardata()
.br
Option = {basepath, unicode:chardata()}
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
pageSetup(This) -> ok
.br
.RS
.LP
Types:

.RS 3
This = wxHtmlEasyPrinting()
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
setFonts(This, Normal_face, Fixed_face) -> ok
.br
.RS
.LP
Types:

.RS 3
This = wxHtmlEasyPrinting()
.br
Normal_face = unicode:chardata()
.br
Fixed_face = unicode:chardata()
.br
.RE
.RE
.RS
.LP
Equivalent to setFonts(This, Normal_face, Fixed_face, [])\&.
.RE
.LP
.B
setFonts(This, Normal_face, Fixed_face, Options::[Option]) -> ok
.br
.RS
.LP
Types:

.RS 3
This = wxHtmlEasyPrinting()
.br
Normal_face = unicode:chardata()
.br
Fixed_face = unicode:chardata()
.br
Option = {sizes, [integer()]}
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
setHeader(This, Header) -> ok
.br
.RS
.LP
Types:

.RS 3
This = wxHtmlEasyPrinting()
.br
Header = unicode:chardata()
.br
.RE
.RE
.RS
.LP
Equivalent to setHeader(This, Header, [])\&.
.RE
.LP
.B
setHeader(This, Header, Options::[Option]) -> ok
.br
.RS
.LP
Types:

.RS 3
This = wxHtmlEasyPrinting()
.br
Header = unicode:chardata()
.br
Option = {pg, integer()}
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
setFooter(This, Footer) -> ok
.br
.RS
.LP
Types:

.RS 3
This = wxHtmlEasyPrinting()
.br
Footer = unicode:chardata()
.br
.RE
.RE
.RS
.LP
Equivalent to setFooter(This, Footer, [])\&.
.RE
.LP
.B
setFooter(This, Footer, Options::[Option]) -> ok
.br
.RS
.LP
Types:

.RS 3
This = wxHtmlEasyPrinting()
.br
Footer = unicode:chardata()
.br
Option = {pg, integer()}
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
destroy(This::wxHtmlEasyPrinting()) -> ok
.br
.RS
.LP
Destroys this object, do not use object again
.RE
.SH AUTHORS
.LP

.I
<>