{"pageProps":{"item":{"id":"136","title":"Erlang OTP 23.0 Release Candidate 1","article_date":1582761600000,"lead":"First release candidate is now available for testing!","frontmatter":{"id":"136","title":"Erlang OTP 23.0 Release Candidate 1","lead":"First release candidate is now available for testing!","tags":"release, candidate, testing","article_date":"2020-02-27T00:00:00Z","created_at":"2020-02-27T13:37:26Z","updated_at":"2020-02-27T13:38:49Z","admin_user_id":"3","visible":"true","article_type_id":"3"},"content":" ## OTP 23 Release Candidate 1\n \nThis is the first of three planned release candidates before the OTP 23 release.\n The intention with this release is to get feedback from our users. **All feedback is welcome**, even if it is only to say that it works for you.\n \nErlang/OTP 23 is a new major release with new features, improvements as well as a few incompatibilities.\n ### Potential Incompatibilities\n * SSL: * Support for SSL 3.0 is completely removed.\n* TLS 1.3 is added to the list of default supported versions.\n* `erl_interface`: Removed the deprecated parts of `erl_interface`\n (`erl_interface.h` and essentially all C functions with prefix `erl_`).\n* The deprecated `erlang:get_stacktrace/0` BIF now returns an empty list instead of a stacktrace.\n `erlang:get_stacktrace/0` is scheduled for removal in OTP 24.\n* ...\n ### Highlights\n * A new module `erpc` in kernel which implements an enhanced subset of the operations provided by the `rpc` module. Enhanced in the sense that it makes it possible to distinguish between returned value, raised exceptions and other errors. `erpc` also has better performance and scalability than the original `rpc` implementation. This by utilizing the newly introduced `spawn_request()` BIF. Also the `rpc` module benefits from these improvements by utilizing `erpc` when possible.\n* Scalability and performance Improvements plus new functionality regarding distributed spawn operations.\n* In binary matching, the size of the segment to be matched is now allowed to be a guard expression (EEP-52)\n* When matching with maps the keys can now be guard expressions (EEP-52).\n* ssh: support for TCP/IP port forwarding, a.k.a tunneling a.k.a as tcp-forward/direct-tcp is implemented. In the OpenSSH client, this corresponds to the options -L and -R.\n* Allow underscores in numeric literals to improve readability. Examples: `123_456_789`, `16#1234_ABCD`.\n* New functions in the shell for displaying documentation for Erlang modules, functions and types. The\n functions are: * `h/1,2,3` -- Print the documentation for a `Module:Function/Arity`.\n* `ht/1,2,3` -- Print the type documentation for a `Module:Type/Arity`.\n The embedded documentation is created as docchunks (EEP 48) when building the Erlang/OTP documentation.\n* kernel: The module `pg` with a new implementation of distributed named process groups is introduced. The old module `pg2` is deprecated and scheduled for removal in OTP 24.\n* Our tool chain for building the Windows packages is upgraded with new C++ compiler, Java compiler, OpenSSL libraries and wxWidgets versions. We are now using WSL (the Linux Subsystem for Windows when building) which makes it easier to handle the build environment.\n* ...\n \nFor more details see\n [http://erlang.org/download/otp_src_23.0-rc1.readme](http://erlang.org/download/otp_src_23.0-rc1.readme)\n \nPre built versions for Windows can be fetched here:\n [http://erlang.org/download/otp_win32_23.0-rc1.exe](http://erlang.org/download/otp_win32_23.0-rc1.exe)\n [http://erlang.org/download/otp_win64_23.0-rc1.exe](http://erlang.org/download/otp_win64_23.0-rc1.exe)\n \nOnline documentation can be browsed here:\n [http://erlang.org/documentation/doc-11.0-rc1/doc](http://erlang.org/documentation/doc-11.0-rc1/doc)\n The Erlang/OTP source can also be found at GitHub on the official Erlang repository,\n [https://github.com/erlang/otp](https://github.com/erlang/otp)\n ","tags":["release","candidate","testing"]}},"__N_SSG":true}