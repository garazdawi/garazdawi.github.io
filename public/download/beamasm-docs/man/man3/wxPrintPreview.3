.TH wxPrintPreview 3 "wx 1.9.1" "" "Erlang Module Definition"
.SH NAME
wxPrintPreview \- See external documentation: wxPrintPreview.
.SH DESCRIPTION
.LP
See external documentation: wxPrintPreview\&.
.SH "DATA TYPES"

.RS 2
.TP 2
.B
wxPrintPreview():

.RS 2
.LP
An object reference, The representation is internal and can be changed without notice\&. It can\&'t be used for comparsion stored on disc or distributed for use on other nodes\&.
.RE
.RE
.SH EXPORTS
.LP
.B
new(Printout) -> wxPrintPreview()
.br
.RS
.LP
Types:

.RS 3
Printout = wxPrintout:wxPrintout()
.br
.RE
.RE
.RS
.LP
Equivalent to new(Printout, [])\&.
.RE
.LP
.B
new(Printout, Options::[Option]) -> wxPrintPreview()
.br
.RS
.LP
Types:

.RS 3
Printout = wxPrintout:wxPrintout()
.br
Option = {printoutForPrinting, wxPrintout:wxPrintout()} | {data, wxPrintDialogData:wxPrintDialogData()}
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
new(Printout, PrintoutForPrinting, Data) -> wxPrintPreview()
.br
.RS
.LP
Types:

.RS 3
Printout = wxPrintout:wxPrintout()
.br
PrintoutForPrinting = wxPrintout:wxPrintout()
.br
Data = wxPrintData:wxPrintData()
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
getCanvas(This) -> wxPreviewCanvas:wxPreviewCanvas()
.br
.RS
.LP
Types:

.RS 3
This = wxPrintPreview()
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
getCurrentPage(This) -> integer()
.br
.RS
.LP
Types:

.RS 3
This = wxPrintPreview()
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
getFrame(This) -> wxFrame:wxFrame()
.br
.RS
.LP
Types:

.RS 3
This = wxPrintPreview()
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
getMaxPage(This) -> integer()
.br
.RS
.LP
Types:

.RS 3
This = wxPrintPreview()
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
getMinPage(This) -> integer()
.br
.RS
.LP
Types:

.RS 3
This = wxPrintPreview()
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
getPrintout(This) -> wxPrintout:wxPrintout()
.br
.RS
.LP
Types:

.RS 3
This = wxPrintPreview()
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
getPrintoutForPrinting(This) -> wxPrintout:wxPrintout()
.br
.RS
.LP
Types:

.RS 3
This = wxPrintPreview()
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
isOk(This) -> boolean()
.br
.RS
.LP
Types:

.RS 3
This = wxPrintPreview()
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
paintPage(This, Canvas, Dc) -> boolean()
.br
.RS
.LP
Types:

.RS 3
This = wxPrintPreview()
.br
Canvas = wxPreviewCanvas:wxPreviewCanvas()
.br
Dc = wxDC:wxDC()
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
print(This, Interactive) -> boolean()
.br
.RS
.LP
Types:

.RS 3
This = wxPrintPreview()
.br
Interactive = boolean()
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
renderPage(This, PageNum) -> boolean()
.br
.RS
.LP
Types:

.RS 3
This = wxPrintPreview()
.br
PageNum = integer()
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
setCanvas(This, Canvas) -> ok
.br
.RS
.LP
Types:

.RS 3
This = wxPrintPreview()
.br
Canvas = wxPreviewCanvas:wxPreviewCanvas()
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
setCurrentPage(This, PageNum) -> boolean()
.br
.RS
.LP
Types:

.RS 3
This = wxPrintPreview()
.br
PageNum = integer()
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
setFrame(This, Frame) -> ok
.br
.RS
.LP
Types:

.RS 3
This = wxPrintPreview()
.br
Frame = wxFrame:wxFrame()
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
setPrintout(This, Printout) -> ok
.br
.RS
.LP
Types:

.RS 3
This = wxPrintPreview()
.br
Printout = wxPrintout:wxPrintout()
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
setZoom(This, Percent) -> ok
.br
.RS
.LP
Types:

.RS 3
This = wxPrintPreview()
.br
Percent = integer()
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
destroy(This::wxPrintPreview()) -> ok
.br
.RS
.LP
Destroys this object, do not use object again
.RE
.SH AUTHORS
.LP

.I
<>