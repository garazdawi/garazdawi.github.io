.TH wxCalendarCtrl 3 "wx 1.9.1" "" "Erlang Module Definition"
.SH NAME
wxCalendarCtrl \- See external documentation: wxCalendarCtrl.
.SH DESCRIPTION
.LP
See external documentation: wxCalendarCtrl\&.
.LP
This class is derived (and can use functions) from: 
.br
wxControl 
.br
wxWindow 
.br
wxEvtHandler 
.SH "DATA TYPES"

.RS 2
.TP 2
.B
wxCalendarCtrl():

.RS 2
.LP
An object reference, The representation is internal and can be changed without notice\&. It can\&'t be used for comparsion stored on disc or distributed for use on other nodes\&.
.RE
.RE
.SH EXPORTS
.LP
.B
new() -> wxCalendarCtrl()
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
new(Parent, Id) -> wxCalendarCtrl()
.br
.RS
.LP
Types:

.RS 3
Parent = wxWindow:wxWindow()
.br
Id = integer()
.br
.RE
.RE
.RS
.LP
Equivalent to new(Parent, Id, [])\&.
.RE
.LP
.B
new(Parent, Id, Options::[Option]) -> wxCalendarCtrl()
.br
.RS
.LP
Types:

.RS 3
Parent = wxWindow:wxWindow()
.br
Id = integer()
.br
Option = {date, wx:wx_datetime()} | {pos, {X::integer(), Y::integer()}} | {size, {W::integer(), H::integer()}} | {style, integer()}
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
create(This, Parent, Id) -> boolean()
.br
.RS
.LP
Types:

.RS 3
This = wxCalendarCtrl()
.br
Parent = wxWindow:wxWindow()
.br
Id = integer()
.br
.RE
.RE
.RS
.LP
Equivalent to create(This, Parent, Id, [])\&.
.RE
.LP
.B
create(This, Parent, Id, Options::[Option]) -> boolean()
.br
.RS
.LP
Types:

.RS 3
This = wxCalendarCtrl()
.br
Parent = wxWindow:wxWindow()
.br
Id = integer()
.br
Option = {date, wx:wx_datetime()} | {pos, {X::integer(), Y::integer()}} | {size, {W::integer(), H::integer()}} | {style, integer()}
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
setDate(This, Date) -> boolean()
.br
.RS
.LP
Types:

.RS 3
This = wxCalendarCtrl()
.br
Date = wx:wx_datetime()
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
getDate(This) -> wx:wx_datetime()
.br
.RS
.LP
Types:

.RS 3
This = wxCalendarCtrl()
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
enableYearChange(This) -> ok
.br
.RS
.LP
Types:

.RS 3
This = wxCalendarCtrl()
.br
.RE
.RE
.RS
.LP
\fIThis function is deprecated: \fR\&not available in wxWidgets-2\&.9 and later
.LP
Equivalent to enableYearChange(This, [])\&.
.RE
.LP
.B
enableYearChange(This, Options::[Option]) -> ok
.br
.RS
.LP
Types:

.RS 3
This = wxCalendarCtrl()
.br
Option = {enable, boolean()}
.br
.RE
.RE
.RS
.LP
\fIThis function is deprecated: \fR\&not available in wxWidgets-2\&.9 and later
.LP
See external documentation\&.
.RE
.LP
.B
enableMonthChange(This) -> ok
.br
.RS
.LP
Types:

.RS 3
This = wxCalendarCtrl()
.br
.RE
.RE
.RS
.LP
Equivalent to enableMonthChange(This, [])\&.
.RE
.LP
.B
enableMonthChange(This, Options::[Option]) -> ok
.br
.RS
.LP
Types:

.RS 3
This = wxCalendarCtrl()
.br
Option = {enable, boolean()}
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
enableHolidayDisplay(This) -> ok
.br
.RS
.LP
Types:

.RS 3
This = wxCalendarCtrl()
.br
.RE
.RE
.RS
.LP
Equivalent to enableHolidayDisplay(This, [])\&.
.RE
.LP
.B
enableHolidayDisplay(This, Options::[Option]) -> ok
.br
.RS
.LP
Types:

.RS 3
This = wxCalendarCtrl()
.br
Option = {display, boolean()}
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
setHeaderColours(This, ColFg, ColBg) -> ok
.br
.RS
.LP
Types:

.RS 3
This = wxCalendarCtrl()
.br
ColFg = wx:wx_colour()
.br
ColBg = wx:wx_colour()
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
getHeaderColourFg(This) -> wx:wx_colour4()
.br
.RS
.LP
Types:

.RS 3
This = wxCalendarCtrl()
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
getHeaderColourBg(This) -> wx:wx_colour4()
.br
.RS
.LP
Types:

.RS 3
This = wxCalendarCtrl()
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
setHighlightColours(This, ColFg, ColBg) -> ok
.br
.RS
.LP
Types:

.RS 3
This = wxCalendarCtrl()
.br
ColFg = wx:wx_colour()
.br
ColBg = wx:wx_colour()
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
getHighlightColourFg(This) -> wx:wx_colour4()
.br
.RS
.LP
Types:

.RS 3
This = wxCalendarCtrl()
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
getHighlightColourBg(This) -> wx:wx_colour4()
.br
.RS
.LP
Types:

.RS 3
This = wxCalendarCtrl()
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
setHolidayColours(This, ColFg, ColBg) -> ok
.br
.RS
.LP
Types:

.RS 3
This = wxCalendarCtrl()
.br
ColFg = wx:wx_colour()
.br
ColBg = wx:wx_colour()
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
getHolidayColourFg(This) -> wx:wx_colour4()
.br
.RS
.LP
Types:

.RS 3
This = wxCalendarCtrl()
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
getHolidayColourBg(This) -> wx:wx_colour4()
.br
.RS
.LP
Types:

.RS 3
This = wxCalendarCtrl()
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
getAttr(This, Day) -> wxCalendarDateAttr:wxCalendarDateAttr()
.br
.RS
.LP
Types:

.RS 3
This = wxCalendarCtrl()
.br
Day = integer()
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
setAttr(This, Day, Attr) -> ok
.br
.RS
.LP
Types:

.RS 3
This = wxCalendarCtrl()
.br
Day = integer()
.br
Attr = wxCalendarDateAttr:wxCalendarDateAttr()
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
setHoliday(This, Day) -> ok
.br
.RS
.LP
Types:

.RS 3
This = wxCalendarCtrl()
.br
Day = integer()
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
resetAttr(This, Day) -> ok
.br
.RS
.LP
Types:

.RS 3
This = wxCalendarCtrl()
.br
Day = integer()
.br
.RE
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
hitTest(This, Pos) -> Result
.br
.RS
.LP
Types:

.RS 3
Result = {Res::wx:wx_enum(), Date::wx:wx_datetime(), Wd::wx:wx_enum()}
.br
This = wxCalendarCtrl()
.br
Pos = {X::integer(), Y::integer()}
.br
.RE
.RE
.RS
.LP
See external documentation\&. 
.br
Wd = ?wxDateTime_Sun | ?wxDateTime_Mon | ?wxDateTime_Tue | ?wxDateTime_Wed | ?wxDateTime_Thu | ?wxDateTime_Fri | ?wxDateTime_Sat | ?wxDateTime_Inv_WeekDay 
.br
Res = ?wxCAL_HITTEST_NOWHERE | ?wxCAL_HITTEST_HEADER | ?wxCAL_HITTEST_DAY | ?wxCAL_HITTEST_INCMONTH | ?wxCAL_HITTEST_DECMONTH | ?wxCAL_HITTEST_SURROUNDING_WEEK
.RE
.LP
.B
destroy(This::wxCalendarCtrl()) -> ok
.br
.RS
.LP
Destroys this object, do not use object again
.RE
.SH AUTHORS
.LP

.I
<>